;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name layout.data, :imports nil, :requires {re-frame.core re-frame.core}, :uses {reg-sub re-frame.core}, :defs {IWillLayout {:meta {:file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :line 4, :column 14, :end-line 4, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {aspect [[_]]}}}, :protocol-symbol true, :name layout.data/IWillLayout, :file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :end-column 25, :column 1, :line 4, :protocol-info {:methods {aspect [[_]]}}, :info nil, :end-line 4, :impls #{layout.data/Layout}, :doc nil, :jsdoc ("@interface")}, aspect {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :line 5, :column 4, :end-line 5, :end-column 10, :protocol layout.data/IWillLayout, :doc "", :arglists (quote ([_]))}, :protocol layout.data/IWillLayout, :name layout.data/aspect, :variadic false, :file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc ""}, PaintRect {:num-fields 5, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name layout.data/PaintRect, :file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :end-column 21, :type true, :column 12, :internal-ctor true, :line 7, :record true, :end-line 7, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->PaintRect {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :line 7, :column 12, :end-line 7, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([id x y width height]))}, :name layout.data/->PaintRect, :variadic false, :file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :end-column 21, :method-params ([id x y width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 7, :end-line 7, :max-fixed-arity 5, :fn-var true, :arglists (quote ([id x y width height]))}, map->PaintRect {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :line 7, :column 12, :end-line 7, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__25111]))}, :name layout.data/map->PaintRect, :variadic false, :file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :end-column 21, :method-params ([G__25111]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25111]))}, Layout {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection layout.data/IWillLayout cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name layout.data/Layout, :file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :end-column 18, :type true, :column 12, :internal-ctor true, :line 9, :record true, :end-line 9, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Layout {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :line 9, :column 12, :end-line 9, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([id rect paint-list items]))}, :name layout.data/->Layout, :variadic false, :file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :end-column 18, :method-params ([id rect paint-list items]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 9, :end-line 9, :max-fixed-arity 4, :fn-var true, :arglists (quote ([id rect paint-list items]))}, map->Layout {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :line 9, :column 12, :end-line 9, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__25119]))}, :name layout.data/map->Layout, :variadic false, :file "/Users/dmitry/research/album/ui_src/layout/data.cljs", :end-column 18, :method-params ([G__25119]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25119]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y paint-list x items rect height y :width width :id :x :paint-list :items id :rect :height}, :order [:id :x :y :width :height id x y width height :rect :paint-list :items rect paint-list items]}, :doc nil}