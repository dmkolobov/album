;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name ui.fx.img, :imports nil, :requires {re-frame.core re-frame.core, clojure.string clojure.string, lib.util lib.util}, :uses {join clojure.string, dispatch re-frame.core, split clojure.string, reg-fx-service lib.util}, :defs {gm {:name ui.fx.img/gm, :file "ui_src/fx/img.cljs", :line 6, :column 1, :end-line 6, :end-column 12, :meta {:file "/Users/dmitry/research/album/ui_src/fx/img.cljs", :line 6, :column 10, :end-line 6, :end-column 12}}, normalize-date {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/fx/img.cljs", :line 8, :column 7, :end-line 8, :end-column 21, :arglists (quote ([taken-at]))}, :name ui.fx.img/normalize-date, :variadic false, :file "ui_src/fx/img.cljs", :end-column 21, :method-params ([taken-at]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([taken-at]))}, process-image-data {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/fx/img.cljs", :line 16, :column 7, :end-line 16, :end-column 25, :arglists (quote ([data]))}, :name ui.fx.img/process-image-data, :variadic false, :file "ui_src/fx/img.cljs", :end-column 25, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:path :taken-at :src-path :img/manipulate :img/info :width :on-success :resize :commands :img/preload :quality :on-error :keywordize-keys :height :dest-path}, :order [:keywordize-keys :width :height :taken-at :img/info :path :on-success :on-error :img/preload :img/manipulate :src-path :dest-path :commands :resize :quality]}, :doc nil}