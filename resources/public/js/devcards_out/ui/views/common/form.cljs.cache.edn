;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name ui.views.common.form, :imports nil, :requires {animations ui.views.common.animations, ui.views.common.animations ui.views.common.animations, reagent.core reagent.core, re-com.core re-com.core, re-com.util re-com.util, reagent reagent.core}, :uses {h-box re-com.core, atom reagent.core, deref-or-value re-com.util, button re-com.core, box re-com.core, v-box re-com.core}, :defs {app-gap {:name ui.views.common.form/app-gap, :file "ui_src/views/common/form.cljs", :line 8, :column 1, :end-line 8, :end-column 13, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/form.cljs", :line 8, :column 6, :end-line 8, :end-column 13}}, px {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/form.cljs", :line 9, :column 7, :end-line 9, :end-column 9, :arglists (quote ([x]))}, :name ui.views.common.form/px, :variadic false, :file "ui_src/views/common/form.cljs", :end-column 9, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, app-padding {:name ui.views.common.form/app-padding, :file "ui_src/views/common/form.cljs", :line 10, :column 1, :end-line 10, :end-column 17, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/form.cljs", :line 10, :column 6, :end-line 10, :end-column 17}}, form-header {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/form.cljs", :line 12, :column 7, :end-line 12, :end-column 18, :arglists (quote ([icon title on-edit]))}, :name ui.views.common.form/form-header, :variadic false, :file "ui_src/views/common/form.cljs", :end-column 18, :method-params ([icon title on-edit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([icon title on-edit]))}, form-content {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/form.cljs", :line 22, :column 7, :end-line 22, :end-column 19, :arglists (quote ([icon content on-commit on-discard]))}, :name ui.views.common.form/form-content, :variadic false, :file "ui_src/views/common/form.cljs", :end-column 19, :method-params ([icon content on-commit on-discard]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 4, :fn-var true, :arglists (quote ([icon content on-commit on-discard]))}, form-overlay {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/form.cljs", :line 38, :column 7, :end-line 38, :end-column 19, :arglists (quote ([on-discard opacity]))}, :name ui.views.common.form/form-overlay, :variadic false, :file "ui_src/views/common/form.cljs", :end-column 19, :method-params ([on-discard opacity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([on-discard opacity]))}, transition {:name ui.views.common.form/transition, :file "ui_src/views/common/form.cljs", :line 45, :column 1, :end-line 45, :end-column 16, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/form.cljs", :line 45, :column 6, :end-line 45, :end-column 16}}, form-transition {:name ui.views.common.form/form-transition, :file "ui_src/views/common/form.cljs", :line 48, :column 1, :end-line 48, :end-column 21, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/form.cljs", :line 48, :column 6, :end-line 48, :end-column 21}}, attr-form {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/form.cljs", :line 61, :column 7, :end-line 61, :end-column 16, :arglists (quote ([& {:keys [model on-commit content-fn form-fn]}])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model on-commit content-fn form-fn]})], :arglists ([& {:keys [model on-commit content-fn form-fn]}]), :arglists-meta (nil)}}, :name ui.views.common.form/attr-form, :variadic true, :file "ui_src/views/common/form.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model on-commit content-fn form-fn]})], :arglists ([& {:keys [model on-commit content-fn form-fn]}]), :arglists-meta (nil)}, :method-params [({:keys [model on-commit content-fn form-fn]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [model on-commit content-fn form-fn]}])}}, :require-macros {reagent.core reagent.core, reagent reagent.core}, :cljs.analyzer/constants {:seen #{:children :align :key :justify :transition-name :background :component-will-leave :icon :overlay-opacity :form-fn :on-click :size :center :style :div :reagent-render :opacity :label :class :padding :gap :on-commit :child :end :i.icon.zmdi :content-fn :model :attr}, :order [:align :center :class :padding :gap :attr :on-click :children :child :i.icon.zmdi :style :opacity :justify :end :label :background :div :component-will-leave :reagent-render :model :on-commit :content-fn :form-fn :icon :overlay-opacity :size :transition-name :key]}, :doc nil}