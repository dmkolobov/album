;; Analyzed by ClojureScript 1.8.40
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name ui.views.common.drawer, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, async cljs.core.async, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {transition {:name ui.views.common.drawer/transition, :file "ui_src/views/common/drawer.cljs", :line 6, :column 1, :end-line 6, :end-column 16, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/drawer.cljs", :line 6, :column 6, :end-line 6, :end-column 16}}, drawer-child {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/drawer.cljs", :line 9, :column 7, :end-line 9, :end-column 19, :arglists (quote ([enter resize]))}, :name ui.views.common.drawer/drawer-child, :variadic false, :file "ui_src/views/common/drawer.cljs", :end-column 19, :method-params ([enter resize]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([enter resize]))}, register-child {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/drawer.cljs", :line 31, :column 7, :end-line 31, :end-column 21, :arglists (quote ([state key node callback]))}, :name ui.views.common.drawer/register-child, :variadic false, :file "ui_src/views/common/drawer.cljs", :end-column 21, :method-params ([state key node callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state key node callback]))}, translate-3d {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/drawer.cljs", :line 38, :column 7, :end-line 38, :end-column 19, :arglists (quote ([x y]))}, :name ui.views.common.drawer/translate-3d, :variadic false, :file "ui_src/views/common/drawer.cljs", :end-column 19, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, layout {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/drawer.cljs", :line 40, :column 7, :end-line 40, :end-column 13, :arglists (quote ([keys nodes]))}, :name ui.views.common.drawer/layout, :variadic false, :file "ui_src/views/common/drawer.cljs", :end-column 13, :method-params ([keys nodes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keys nodes]))}, intro-sequence {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/drawer.cljs", :line 58, :column 7, :end-line 58, :end-column 21, :arglists (quote ([_ max-width offsets]))}, :name ui.views.common.drawer/intro-sequence, :variadic false, :file "ui_src/views/common/drawer.cljs", :end-column 21, :method-params ([_ max-width offsets]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ max-width offsets]))}, resize-sequence {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/drawer.cljs", :line 67, :column 7, :end-line 67, :end-column 22, :arglists (quote ([pw w offsets]))}, :name ui.views.common.drawer/resize-sequence, :variadic false, :file "ui_src/views/common/drawer.cljs", :end-column 22, :method-params ([pw w offsets]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pw w offsets]))}, drawer {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/views/common/drawer.cljs", :line 75, :column 7, :end-line 75, :end-column 13, :arglists (quote ([& _])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_)], :arglists ([& _]), :arglists-meta (nil)}}, :name ui.views.common.drawer/drawer, :variadic true, :file "ui_src/views/common/drawer.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(_)], :arglists ([& _]), :arglists-meta (nil)}, :method-params [(_)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 0, :fn-var true, :arglists ([& _])}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:children :key :else :prev-width :name :component-did-mount :parent-node :component-did-update :recur :duration :final :callbacks :div.drawer-child :div.drawer :style :ease :component-will-appear :reagent-render :nodes :class :initial :component-will-mount :position :delay}, :order [:component-will-appear :component-did-mount :reagent-render :div.drawer-child :class :style :position :nodes :callbacks :initial :final :duration :delay :parent-node :prev-width :component-will-mount :component-did-update :recur :children :key :ease :else :div.drawer :name]}, :doc nil}