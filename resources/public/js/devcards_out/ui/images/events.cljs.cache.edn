;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name ui.images.events, :imports nil, :requires {re-frame.core re-frame.core, ui.async-util ui.async-util, layouts layout.data, layout.data layout.data}, :uses {reg-event-db re-frame.core, trim-v re-frame.core, async-action ui.async-util, reg-event-fx re-frame.core}, :defs {file-path {:name ui.images.events/file-path, :file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :line 6, :column 1, :end-line 6, :end-column 19, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :line 6, :column 10, :end-line 6, :end-column 19}}, ImageAsset {:num-fields 5, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection layout.data/IWillLayout cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name ui.images.events/ImageAsset, :file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 8, :record true, :end-line 8, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->ImageAsset {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :line 8, :column 12, :end-line 8, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([filesize taken-at last-modified size aspect]))}, :name ui.images.events/->ImageAsset, :variadic false, :file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :end-column 22, :method-params ([filesize taken-at last-modified size aspect]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 8, :end-line 8, :max-fixed-arity 5, :fn-var true, :arglists (quote ([filesize taken-at last-modified size aspect]))}, map->ImageAsset {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :line 8, :column 12, :end-line 8, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__22848]))}, :name ui.images.events/map->ImageAsset, :variadic false, :file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :end-column 22, :method-params ([G__22848]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__22848]))}, image-intercept {:name ui.images.events/image-intercept, :file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :line 14, :column 1, :end-line 14, :end-column 21, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :line 14, :column 6, :end-line 14, :end-column 21}}, path->import-event {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :line 100, :column 7, :end-line 100, :end-column 25, :arglists (quote ([path]))}, :name ui.images.events/path->import-event, :variadic false, :file "/Users/dmitry/research/album/ui_src/ui/images/events.cljs", :end-column 25, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:seen? :path :aspect :first-dispatch :images/open-info :controls/push-view :taken-at :images/rewind-carousel :when :src-path :db :carousel-view :image/import :images/open-carousel :img/info :events :image-info aspect :image/store-info taken-at :dispatch-n :on-success :main-thread/open-files :rules :last-modified :images/close-carousel :size :images/advance-carousel :dispatch :images/carousel-state :event :fs/copy :img/preload :controls/pop-view :start-import :images/close-info :image/read-info :async/error :async/success :seen-any-of? last-modified size :capture? :first-dispatches :filesize :fs/stat :images/info? :preloaded? :idx :halt? :on-error :items :on-open filesize :import-images :async-flow :dest-path :image/mark-loaded}, :order [:filesize :taken-at :last-modified :size :aspect filesize taken-at last-modified size aspect :image/store-info :image-info :image/mark-loaded :preloaded? :image/read-info :on-success :on-error :fs/stat :path :img/info :async-flow :first-dispatches :rules :when :event :capture? :dispatch :seen? :async/success :events :halt? :seen-any-of? :async/error :image/import :fs/copy :src-path :dest-path :img/preload :first-dispatch :dispatch-n :import-images :start-import :main-thread/open-files :on-open :images/open-carousel :db :items :idx :images/carousel-state :controls/push-view :carousel-view :images/close-carousel :controls/pop-view :images/advance-carousel :images/rewind-carousel :images/open-info :images/info? :images/close-info]}, :doc nil}