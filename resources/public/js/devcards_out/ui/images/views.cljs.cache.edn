;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name ui.images.views, :imports nil, :requires {re-frame.core re-frame.core, re-com.core re-com.core}, :uses {subscribe re-frame.core, box re-com.core, throbber re-com.core}, :defs {absolute-image {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :line 5, :column 7, :end-line 5, :end-column 21, :arglists (quote ([& {:keys [path on-click]}])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [path on-click]})], :arglists ([& {:keys [path on-click]}]), :arglists-meta (nil)}}, :name ui.images.views/absolute-image, :variadic true, :file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [path on-click]})], :arglists ([& {:keys [path on-click]}]), :arglists-meta (nil)}, :method-params [({:keys [path on-click]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [path on-click]}])}, block-image {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :line 19, :column 7, :end-line 19, :end-column 18, :arglists (quote ([& {:keys [path on-click]}])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [path on-click]})], :arglists ([& {:keys [path on-click]}]), :arglists-meta (nil)}}, :name ui.images.views/block-image, :variadic true, :file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [path on-click]})], :arglists ([& {:keys [path on-click]}]), :arglists-meta (nil)}, :method-params [({:keys [path on-click]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [path on-click]}])}, square-photo {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([path {:keys [aspect], :as info}]))}, :name ui.images.views/square-photo, :variadic false, :file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :end-column 19, :method-params ([path p__22908]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path {:keys [aspect], :as info}]))}, landscape-photo {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :line 41, :column 7, :end-line 41, :end-column 22, :arglists (quote ([path info]))}, :name ui.images.views/landscape-photo, :variadic false, :file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :end-column 22, :method-params ([path info]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path info]))}, portrait-photo {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :line 48, :column 7, :end-line 48, :end-column 21, :arglists (quote ([path {:keys [aspect], :as info}]))}, :name ui.images.views/portrait-photo, :variadic false, :file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :end-column 21, :method-params ([path p__22913]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path {:keys [aspect], :as info}]))}, fullscreen-photo {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :line 58, :column 7, :end-line 58, :end-column 23, :arglists (quote ([path {:keys [aspect], :as info}]))}, :name ui.images.views/fullscreen-photo, :variadic false, :file "/Users/dmitry/research/album/ui_src/ui/images/views.cljs", :end-column 23, :method-params ([path p__22918]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path {:keys [aspect], :as info}]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:path :aspect :align :max-height :bottom :top :img.image :width :src :max-width :on-click :size :center :style :div :z-index :padding-left :right :display :position :child :height :left :margin}, :order [:path :on-click :img.image :src :style :max-height :bottom :top :max-width :right :display :position :left :margin :z-index :aspect :div :width :height :padding-left :size :align :center :child]}, :doc nil}