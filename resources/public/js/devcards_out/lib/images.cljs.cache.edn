;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name lib.images, :imports nil, :requires {re-frame.core re-frame.core, lib.util lib.util}, :uses {success-ev lib.util, reg-sub re-frame.core, reg-event-db re-frame.core, error-ev lib.util, trim-v re-frame.core, async-action lib.util, reg-event-fx re-frame.core}, :defs {file-path {:name lib.images/file-path, :file "ui_src/lib/images.cljs", :line 5, :column 1, :end-line 5, :end-column 19, :meta {:file "/Users/dmitry/research/album/ui_src/lib/images.cljs", :line 5, :column 10, :end-line 5, :end-column 19}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:path :lib.images/mark-loaded :img/info :on-success :all :rules :dispatch :filename :id :lib.images/read-data :first-dispatches :trace? :fs/stat :preloaded? :capture :halt? :on-error :lib.images/preloaded? :async-flow :any}, :order [:lib.images/read-data :on-success :on-error :fs/stat :path :img/info :id :filename :async-flow :first-dispatches :rules :all :dispatch :capture :halt? :any :trace? :lib.images/mark-loaded :preloaded? :lib.images/preloaded?]}, :doc nil}