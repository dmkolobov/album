;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name data.images, :imports nil, :requires nil, :uses nil, :defs {schema {:name data.images/schema, :file "ui_src/data/images.cljs", :line 3, :column 1, :end-line 3, :end-column 12, :meta {:file "/Users/dmitry/research/album/ui_src/data/images.cljs", :line 3, :column 6, :end-line 3, :end-column 12}}, build-image {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/data/images.cljs", :line 9, :column 7, :end-line 9, :end-column 18, :arglists (quote ([{:keys [id width height filesize path]}]))}, :name data.images/build-image, :variadic false, :file "ui_src/data/images.cljs", :end-column 18, :method-params ([p__25394]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [id width height filesize path]}]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:path :data.images/height :data.images/width :db.type/string :db/type :width :data.images/filesize :id :db/id :filesize :db.type/double :db.type/long :data.images/path :height}, :order [:data.images/width :data.images/height :data.images/filesize :data.images/path :db/type :db.type/double :db.type/long :db.type/string :id :width :height :filesize :path :db/id]}, :doc nil}