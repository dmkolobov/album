;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name data.photos, :imports nil, :requires {datascript datascript.core, datascript.core datascript.core, data.images data.images}, :uses {build-image data.images}, :defs {schema {:name data.photos/schema, :file "ui_src/data/photos.cljs", :line 5, :column 1, :end-line 5, :end-column 12, :meta {:file "/Users/dmitry/research/album/ui_src/data/photos.cljs", :line 5, :column 6, :end-line 5, :end-column 12}}, build-photo {:protocol-inline nil, :meta {:file "/Users/dmitry/research/album/ui_src/data/photos.cljs", :line 13, :column 7, :end-line 13, :end-column 18, :arglists (quote ([{:keys [id filename taken-on], :as data}]))}, :name data.photos/build-photo, :variadic false, :file "ui_src/data/photos.cljs", :end-column 18, :method-params ([p__25401]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [id filename taken-on], :as data}]))}, grouped-query {:name data.photos/grouped-query, :file "ui_src/data/photos.cljs", :line 20, :column 1, :end-line 20, :end-column 19, :meta {:file "/Users/dmitry/research/album/ui_src/data/photos.cljs", :line 20, :column 6, :end-line 20, :end-column 19}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:path :db.type/instant :find :data.images/height :where :data.photos/taken-on ?height ?image-id ?width :data.images/width :data.photos/base-image :db/valueType :db.type/string :db.type/ref :db/type :width :db/isComponent :data.photos/filename :taken-on :filename $ :id ?photo-id :db/cardinality :filesize :db.cardinality/many :height :in ?key ?key-attr}, :order [:data.photos/filename :data.photos/taken-on :data.photos/base-image :db/type :db.type/string :db.type/instant :db/valueType :db/cardinality :db/isComponent :db.type/ref :db.cardinality/many :id :filename :taken-on :path :width :height :filesize :find ?key ?photo-id ?width ?height :in $ ?key-attr :where ?image-id :data.images/width :data.images/height]}, :doc nil}